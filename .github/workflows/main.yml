name: QPDF Build
env:
  QTEST_COLOR: 1
on:
  workflow_dispatch:
jobs:
  Prebuild:
    # Run steps that are needed by the Windows build but are easier to
    # build on Linux. Also create the documentation distribution.
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: 'Run pre-build steps'
        run: build-scripts/prebuild ${{ secrets.GITHUB_TOKEN }}
      - name: 'Upload documentation for later build steps'
        uses: actions/upload-artifact@v4
        with:
          name: doc
          path: doc.zip
      - name: 'Upload external libs'
        uses: actions/upload-artifact@v4
        with:
          name: external-libs
          path: external-libs-dist
      - name: 'Upload doc distribution'
        uses: actions/upload-artifact@v4
        with:
          name: distribution-prebuild
          path: distribution
  Linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: 'Generate, build, and test'
        run: build-scripts/build-linux
      - name: Upload distribution
        uses: actions/upload-artifact@v4
        with:
          name: distribution-linux
          path: distribution
  Windows:
    runs-on: windows-latest
    needs: Prebuild
    strategy:
      fail-fast: false
      max-parallel: 4
      matrix:
        tool: [msvc, mingw]
        wordsize: [64, 32]
    steps:
      - name: 'Disable git autocrlf'
        shell: bash
        run: git config --global core.autocrlf input
      - uses: actions/checkout@v4
      - name: 'Download documentation'
        uses: actions/download-artifact@v4
        with:
          name: doc
          path: .
      - name: 'Download external libs'
        uses: actions/download-artifact@v4
        with:
          name: external-libs
          path: .
      - name: 'Build, test, generate binary distributions'
        shell: cmd
        run: build-scripts/build-windows.bat ${{ matrix.wordsize }} ${{ matrix.tool }}
      - name: 'Upload binary distributions'
        uses: actions/upload-artifact@v4
        with:
          name: distribution-windows-${{ matrix.wordsize }}-${{ matrix.tool }}
          path: distribution
  macOS:
    runs-on: macos-latest
    needs: Prebuild
    steps:
      - uses: actions/checkout@v4
      - name: 'Mac build and test'
        run: build-scripts/build-mac
  AppImage:
    runs-on: ubuntu-latest
    needs: Prebuild
    steps:
      - uses: actions/checkout@v4
      - name: 'Build AppImage'
        run: build-scripts/build-appimage
      - name: 'Upload AppImage'
        uses: actions/upload-artifact@v4
        with:
          name: distribution-appimage
          path: distribution
  QuickJobs:
    runs-on: ubuntu-latest
    needs: Prebuild
    strategy:
      fail-fast: false
      max-parallel: 3
      matrix:
        script:
          - build-fuzzer
          - pkg-test
          - build-linux32
          - test-alt-zlib
          - test-unsigned-char
          - test-c++-next
    steps:
      - uses: actions/checkout@v4
      - name: ${{ matrix.script }}
        run: build-scripts/${{ matrix.script }}
  MergeArtifacts:
     runs-on: ubuntu-latest
     needs:
       - Prebuild
       - Linux
       - Windows
       - AppImage
     steps:
       - name: Merge Artifacts
         uses: actions/upload-artifact/merge@v4
         with:
           name: distribution
           pattern: distribution-*
